[{"doc":"This page has not yet sprouted","title":"This page has not yet sprouted","hpath":"403","content":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","url":"https://Matmaus.github.io/notes/403.html","relUrl":"notes/403.html"},{"doc":"Digital Garden","title":"Digital Garden","hpath":"root","content":"\nHome page of my personal Digital Garden. First plant planted in March 2021. I hope the garden will grow with me.\n\nTo read more about Digital Gardens see this one https://wiki.nikitavoloboev.xyz/#grow-your-own-digital-garden.\n","url":"https://Matmaus.github.io","relUrl":"/"},{"doc":"Programming","title":"Programming","hpath":"programming","content":"","url":"https://Matmaus.github.io/notes/1deca60a-aac4-495f-918a-187efa06f91d.html","relUrl":"notes/1deca60a-aac4-495f-918a-187efa06f91d.html"},{"doc":"Encoding","title":"Encoding","hpath":"programming.encoding","content":"\n## UTF - Unicode Transformation Format\n\nAn X in UTF-X represents a number of bits in a code unit, i.e. UTF-8 has 8-bit code unit, UTF-16 has 16-bit code unit, and UTF-32 has 32-bit code unit. Code unit is a minimal length of a single character in the selected encoding. For example, ASCII characters encoded using UTF-16 will have one NULL byte as padding. Whether the padding will be before or after ASCII character depends on used endianness.\n\nUTF with a code unit greater than 8 (1 byte) has to use one of endianness to store the data in memory. What endianness is used can be determined by a byte order mark (BOM) at the beginning of the data stream. If there is not any, the default endian is big-endian.\n\nEach UTF have the same range of possible values and can represent the same set of Unicode characters.\n\nHere is a table that summarizes the text above:\n\n| Name                       | UTF-8  | UTF-16  | UTF-16BE   | UTF-16LE      | UTF-32  | UTF-32BE   | UTF-32LE      |\n| -------------------------- | ------ | ------- | ---------- | ------------- | ------- | ---------- | ------------- |\n| Smallest code point        | 0000   | 0000    | 0000       | 0000          | 0000    | 0000       | 0000          |\n| Largest code point         | 10FFFF | 10FFFF  | 10FFFF     | 10FFFF        | 10FFFF  | 10FFFF     | 10FFFF        |\n| Code unit size             | 8-bits | 16-bits | 16-bits    | 16-bits       | 32-bits | 32-bits    | 32-bits       |\n| Byte order                 | N/A    | BOM     | big-endian | little-endian | BOM     | big-endian | little-endian |\n| Fewest bytes per character | 1      | 2       | 2          | 2             | 4       | 4          | 4             |\n| Most bytes per character   | 4      | 4       | 4          | 4             | 4       | 4          | 4             |\n\n\\* LE means little-endian and BE means big-endian.\n\nSource: [General questions, relating to UTF or Encoding Form](http://unicode.org/faq/utf_bom.html)\n","url":"https://Matmaus.github.io/notes/ac575a59-0606-469e-9c39-e09de2c69caa.html","relUrl":"notes/ac575a59-0606-469e-9c39-e09de2c69caa.html"},{"doc":"Programming Languages","title":"Programming Languages","hpath":"programming-languages","content":"\nTODO\n","url":"https://Matmaus.github.io/notes/91af5618-11d4-4eb7-9458-dbb9de312c79.html","relUrl":"notes/91af5618-11d4-4eb7-9458-dbb9de312c79.html"},{"doc":"Rust","title":"Rust","hpath":"programming-languages.rust","content":"\n## Issues\n\n### Calling a function through a member variable?\n\n```rust\n// Not possible because `self.go` is an attribute not a method.\nself.go(n)\n// Possible because a variable is created at first and then it is called as a function.\nlet f = self.go;\nf(n)\n// Alternative\n(self.go)(n)\n```\n\nSource: https://stackoverflow.com/questions/27994509/how-do-i-call-a-function-through-a-member-variable\n\n## Utilities for Rust\n\n- [cargo-edit](https://github.com/killercup/cargo-edit) - a utility for managing cargo dependencies from the command line\n\n## Links\n\n- [Awesome Rust](https://github.com/rust-unofficial/awesome-rust) - a curated list of Rust code and resources\n- [Blogs tagged \"rust\"](https://blogsurf.io/tag/rust/)\n- [Demystifying Closures, Futures and async-await in Rust–Part 3: Async & Await](https://medium.com/@alistairisrael/demystifying-closures-futures-and-async-await-in-rust-part-3-async-await-9ed20eede7a4)\n- [Introduction to Procedural Macros in Rust](https://tinkering.xyz/introduction-to-proc-macros/)\n","url":"https://Matmaus.github.io/notes/3293d34c-b9a6-42e1-8493-65bef9df36e6.html","relUrl":"notes/3293d34c-b9a6-42e1-8493-65bef9df36e6.html"},{"doc":"Python","title":"Python","hpath":"programming-languages.python","content":"\n- case-sensitive\n- .py extension\n\n## Links\n\n- [traceback_with_variables](https://github.com/andy-landy/traceback_with_variables) - adds variables to python traceback. Simple, lightweight, controllable. Debug reasons of exceptions by logging or pretty printing colorful variable contexts for each frame in a stacktrace, showing every value. Dump locals environments after errors to console, files, and loggers. Works in Jupyter and IPython. Install with pip or conda.\n","url":"https://Matmaus.github.io/notes/ae068c55-dfe6-4839-9d7a-b0c773d5116f.html","relUrl":"notes/ae068c55-dfe6-4839-9d7a-b0c773d5116f.html"},{"doc":"Logging","title":"Logging","hpath":"programming-languages.python.logging","content":"\nUsing [logging](https://docs.python.org/3/library/logging.html) module in Python.\n\n## Application vs Library\n\nA library should not use or configure the root logger. Instead, it should define a new library-specific logger. The specific name can be achieved using `__name__` global variable but it is not reqired. In the case an application does not configure any handler, the default handler will be used, logging messages into `sys.stderr`. `NullHandler()` can be used to avoid such a behaviour. An example of configuration and usage is shown down below. The default logging level is set to `NOTSET` by default.\n\n```python\n## library/__init__.py\nimport logging\n# Create a new library-specific logger\nlogger = logging.getLogger(__name__)\n# Disable default handler\nlogger.addHandler(logging.NullHandler())\n```\n\n```python\n## library/module.py\nfrom library import logger\n\nlogger.info('message')\n```\n\nAn application should configure the root logger. It can use `logging.baseConfig()` to do that. By configuring the root logger, all loggers from all imported libraries can start producing logs. Among using of filters, another solution to disable logging from a specific logger is to use either increase logging level `logging.getLogger('library').setLevel(logging.WARNING)` or disable propagation of messages to the parent loggers `logging.getLogger('library').propagate = False`. An example of using the library mentioned above in and application:\n\n```python\n## a console script\nimport logging\nfrom library import do_something\n\n# Configure the root logger\nlogging.basicConfig(level=logging.DEBUG)  # the rest of parames will be set to default\n# Disable logs below `WARNING` from `another_library`\nlogging.getLogger('another_library').setLevel(logging.WARNING)\n\ndo_something()\n```\n\n## Logger hierarchy\n\nLoggers use a hierarchy. The root is the top-most logger and named loggers are its children, grandchildren and so on. The hierarchy can be acomplished using a dot `.` notation. For example, `logging.getLogger('library')` has not specified any parent using `.`, hence its parent will be the root. Logger named `logging.getLogger('library.a'}` will be a children of logger named `library` if it exists. If it does not exist, the root will be used instead. The hierarchy can be also acomplished using `logging.getLogger('library').getChild('a')`.\n\nThe hierarchy is used for message propagation. The decision whether to log and propagate message to the parent depends on the message level. If the message level is high enough, the message is logged by logger and propagated to the parent logger if exists. The parent loggers invoke all handlers regardless of level.\n\n## Additional notes\n\n- using `logging.debug()` or another module-level logging method directly will invoke the root logger with default configuration if it is not configured already\n- default level of loggers is `NOTSET (0)`. In this case, it will level of first parent with configured level\n\n## Resources\n\n- [Understanding Python’s logging module](https://www.electricmonk.nl/log/2017/08/06/understanding-pythons-logging-module/)\n- [Python Logging: An In-Depth Tutorial](https://www.toptal.com/python/in-depth-python-logging)\n- [Setting up Python logging for a library/app ](https://dev.to/joaomcteixeira/setting-up-python-logging-for-a-library-app-6ml)\n","url":"https://Matmaus.github.io/notes/6ceba88e-f2f0-4689-8238-1380a3c84748.html","relUrl":"notes/6ceba88e-f2f0-4689-8238-1380a3c84748.html"},{"doc":"Git Repositories","title":"Git Repositories","hpath":"git-repositories","content":"\n## Basic Unix/Linux tools replacement\n\n- [coreutils](https://github.com/uutils/coreutils) - cross-platform Rust rewrite of the GNU coreutils\n\n### cd\n\n- [zoxide](https://github.com/ajeetdsouza/zoxide) - a blazing fast alternative to cd, inspired by z and z.lua. It keeps track of the directories you use most frequently, and uses a ranking algorithm to navigate to the best match.\n\n### ls\n\n- [exa](https://github.com/ogham/exa) - a modern replacement for the venerable file-listing command-line program ls, giving it more features and better defaults. It uses colours to distinguish file types and metadata. It knows about symlinks, extended attributes, and Git. And it’s small, fast, and just one single binary.\n- [lsd](https://github.com/Peltoche/lsd) - the next gen ls command\n\n### cat\n\n- [bat](https://github.com/sharkdp/bat) - cat(1) clone with syntax highlighting and Git integration\n\n### find\n\n- [fd](https://github.com/sharkdp/fd) - a program to find entries in your filesytem. It is a simple, fast and user-friendly alternative to find. While it does not aim to support all of find's powerful functionality, it provides sensible (opinionated) defaults for a majority of use cases.\n\n### curl, wget\n\n- [httpie](https://github.com/httpie/httpie) - a command-line HTTP client. Its goal is to make CLI interaction with web services as human-friendly as possible. HTTPie is designed for testing, debugging, and generally interacting with APIs & HTTP servers.\n\n### sed\n\n- [sd](https://github.com/chmln/sd) - an intuitive find & replace CLI.\n\n### du -sh\n\n- [diskus](https://github.com/sharkdp/diskus) - a minimal, fast alternative to `du -sh`\n\n## Interesting tools\n\n- [navi](https://github.com/denisidoro/navi) - an interactive cheatsheet tool for the command-line\n- [jq](https://github.com/stedolan/jq) - a lightweight and flexible command-line JSON processor\n- [visidata](https://github.com/saulpw/visidata) - a terminal interface for exploring and arranging tabular data\n- [q](https://github.com/harelba/q) - a command line tool that allows direct execution of SQL-like queries on CSVs/TSVs (and any other tabular text files)\n- [fselect](https://github.com/jhspetersson/fselect) - find files with SQL-like queries\n- [linguist](https://github.com/github/linguist) - a library used on GitHub.com to detect blob languages, ignore binary or vendored files, suppress generated files in diffs, and generate language breakdown graphs.\n- [charlock_holmes](https://github.com/brianmario/charlock_holmes) - character encoding detection, brought to you by ICU\n- [dotter](https://github.com/SuperCuber/dotter) - a dotfile manager and templater written in rust\n- [broot](https://github.com/Canop/broot) - a new way to see and navigate directory trees\n- [shell-functools](https://github.com/sharkdp/shell-functools) - a collection of functional programming tools for the shell\n- [tokei](https://github.com/XAMPPRocky/tokei) - a program that displays statistics about your code (cloc replacement)\n- [rga](ripgrep, but also search in PDFs, E-Books, Office documents, zip, tar.gz, etc.)\n- [Gibberish-Detector](https://github.com/rrenaud/Gibberish-Detector) - a small program to detect gibberish using a Markov Chain\n- [carbon](https://github.com/carbon-app/carbon) & [silicon](https://github.com/Aloxaf/silicon) - create and share beautiful images of your source code\n- [asciinema](https://github.com/asciinema/asciinema) - terminal session recorder\n- [watchexec](https://github.com/watchexec/watchexecwatchexec) - executes commands in response to file modifications\n- [so](https://github.com/samtay/so) - a terminal interface for Stack Overflow\n- [mdcat](https://github.com/lunaryorn/mdcat) - cat for markdown\n- [pueue](https://github.com/Nukesor/pueue) - manage your shell commands\n\n- [active-forks](https://github.com/techgaun/active-forks) - (web) find active github forks of a repo\n\n## Interesting collections\n\n- [ExploitingBooks](https://github.com/hdbreaker/ExploitingBooks)\n- [The Art of Command Line](https://github.com/jlevy/the-art-of-command-line)\n","url":"https://Matmaus.github.io/notes/9db25017-3d0f-43f2-9408-37524af1ebf7.html","relUrl":"notes/9db25017-3d0f-43f2-9408-37524af1ebf7.html"},{"doc":"Changelog","title":"Changelog","hpath":"root.changelog","content":"","url":"https://Matmaus.github.io/notes/changelog.html","relUrl":"notes/changelog.html"}]
